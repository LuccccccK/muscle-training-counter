AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  CertificateARN:
    Type: String

Resources:
  # CloudFront Origin Access Identity
  OAI:
    Type: 'AWS::CloudFront::CloudFrontOriginAccessIdentity'
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: OAIConfig
  # S3 Bucket Create
  S3BucketForOrigin:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: s3-mtc-haba-link
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - Authorization
              - Content-Length
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            MaxAge: 3000
  # S3 Bucket Policy Create
  S3BucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    DependsOn: OAI
    Properties:
      Bucket: !Ref S3BucketForOrigin
      PolicyDocument:
        Statement:
          - Sid: APIReadForGetBucketObjects
            Effect: Allow
            Action: 's3:GetObject'
            Principal:
              AWS: !Sub arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OAI}
            Resource: !Sub arn:aws:s3:::${S3BucketForOrigin}/*
  # CloudFront Cache Policy Create
  CloudFrontCachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties: 
      CachePolicyConfig: 
        DefaultTTL: 86400
        MaxTTL: 31536000
        MinTTL: 1
        Name: MtcCfCachePolicy
        ParametersInCacheKeyAndForwardedToOrigin: 
          CookiesConfig: 
            CookieBehavior: none
          EnableAcceptEncodingBrotli: false
          EnableAcceptEncodingGzip: false
          HeadersConfig: 
            HeaderBehavior: none
          QueryStringsConfig:
            QueryStringBehavior: all
  # CloudFront Distribution Create
  CloudFrontDistribution:
    Type: 'AWS::CloudFront::Distribution'
    DependsOn:
      - S3BucketForOrigin
      - OAI
    Properties:
      DistributionConfig:
        Aliases: 
          - mtc.haba.link
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt S3BucketForOrigin.DomainName
            Id: !Sub S3bucketForOrigin
            S3OriginConfig:
              OriginAccessIdentity: !Join
                - ''
                - - 'origin-access-identity/cloudfront/'
                  - !Ref OAI
          - DomainName: !Join 
              - ''
              - - !ImportValue MtcCfnApi-ApiGatewayId
                - ".execute-api.ap-northeast-1.amazonaws.com"
            Id: "ApiGatewayOrigin"
            OriginPath: "/v1"
            CustomOriginConfig:
              OriginProtocolPolicy: "https-only"
        Enabled: true
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - HEAD
              - OPTIONS
            TargetOriginId: ApiGatewayOrigin
            CachePolicyId: !Ref CloudFrontCachePolicy
            PathPattern: "api/*"
            ViewerProtocolPolicy: redirect-to-https
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            # - POST
            # - PUT
            # - PATCH
            # - DELETE
            - HEAD
            - OPTIONS
          TargetOriginId: S3bucketForOrigin
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: index.html
        ViewerCertificate:
          AcmCertificateArn: !Sub ${CertificateARN}
          MinimumProtocolVersion: TLSv1
          SslSupportMethod: sni-only

Outputs:
  BucketName:
    Value: !Ref S3BucketForOrigin
    Export: 
      Name: !Sub ${AWS::StackName}-BucketName
  DomainName:
    Value: !GetAtt CloudFrontDistribution.DomainName
    Export: 
      Name: !Sub ${AWS::StackName}-DomainName
